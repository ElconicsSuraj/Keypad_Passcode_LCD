#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include "Keypad.h"

// Set the LCD address to 0x3F for a 16 chars and 2 line display
LiquidCrystal_I2C lcd(0x27, 16, 2); // Specify LCD address and dimensions

const byte ROWS = 4; // number of rows
const byte COLS = 4; // number of columns
char keys[ROWS][COLS] = {
    {'1', '2', '3', 'A'},
    {'4', '5', '6', 'B'},
    {'7', '8', '9', 'C'},
    {'*', '0', '#', 'D'}
};

byte rowPins[ROWS] = {13, 14, 27, 26}; // row pinouts of the keypad R1 = D8, R2 = D7, R3 = D6, R4 = D5
byte colPins[COLS] = {25, 33, 32, 5};  // column pinouts of the keypad C1 = D4, C2 = D3, C3 = D2
Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

const char passcode[] = "7981";
char inputBuffer[5]; // Buffer to store input characters + '\0'

const int buzzerPin = 2;

int passcodePosition = 0; // Keep track of the current position of passcode display on LCD

void buzz(int buzzCount = 1)
{
    for (int i = 0; i < buzzCount; ++i)
    {
        digitalWrite(buzzerPin, HIGH);
        delay(100);
        digitalWrite(buzzerPin, LOW);
        delay(100);
    }
}

void playWelcomeTone()
{
    // Play a welcome tone (you can customize this as needed)
    tone(buzzerPin, 1000, 500); // Example: 1000 Hz tone for 500 milliseconds
    delay(600);                  // Delay to distinguish between buzz and welcome tone
}

void setup()
{
    Serial.begin(9600);
    pinMode(buzzerPin, OUTPUT);
    inputBuffer[0] = '\0'; // Initialize buffer with null terminator

    // Initialize LCD
    lcd.begin();        // Initialize the LCD
    lcd.backlight();    // Turn on the backlight
    lcd.clear();        // Clear the LCD screen
    lcd.setCursor(0, 0);
    lcd.print("Enter Passcode:");
}

void loop()
{
    char key = keypad.getKey();

    if (key != NO_KEY)
    {
        // Display the pressed key on the LCD
        lcd.setCursor(passcodePosition, 1);
        lcd.print(key);

        // Buzz each time a button is pressed
        buzz();

        if (key == '#')
        { // Check if '#' button is pressed
            // Compare the input buffer with passcode
            if (strcmp(inputBuffer, passcode) == 0)
            {
                lcd.clear();
                lcd.print("Passcode correct!");
                // Play a welcome tone
                playWelcomeTone();
            }
            else
            {
                lcd.clear();
                lcd.print("Passcode incorrect!");
                // Buzz three times for incorrect passcode
                buzz(3);
            }
            inputBuffer[0] = '\0'; // Clear the input buffer
            delay(2000);           // Display message for 2 seconds
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Enter Passcode:");
            passcodePosition = 0; // Reset passcode position
        }
        else if (key == '*')
        {
            // Erase the last entered digit
            if (strlen(inputBuffer) > 0)
            {
                inputBuffer[strlen(inputBuffer) - 1] = '\0';
                lcd.setCursor(passcodePosition, 1);
                lcd.print(" "); // Erase the character from the LCD
                passcodePosition--; // Move position back
            }
        }
        else
        {
            // Append the pressed key to the input buffer if it's not '#' or '*'
            strncat(inputBuffer, &key, 1);
            passcodePosition++; // Move position forward
        }
    }
}
